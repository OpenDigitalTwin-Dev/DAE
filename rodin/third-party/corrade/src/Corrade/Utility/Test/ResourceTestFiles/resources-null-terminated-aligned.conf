group=nullTerminatedAligned

# These are here in order to test the global / local overrides, even though it
# means most of the files have to override this
nullTerminated=true
align=16

# Aliases are numbered in order to guarantee the order, see
# Implementation/ResourceCompile.h for more details on the data packing options
# considered.

# This one is null-terminated so there should be exactly one byte after
[file]
filename=17bytes-66.bin
alias=0-null-terminated.bin
# nullTerminated=true is set globally
align=1

# This one is neither aligned nor null-terminated
[file]
filename=17bytes-33.bin
alias=1.bin
nullTerminated=false
align=1

# This one is 16-byte aligned so there should be padding before
[file]
filename=17bytes-66.bin
alias=2-align16.bin
nullTerminated=false
# align=16 is set globally

# An aligned empty file. There's padding before, but no actual content.
[file]
filename=empty.bin
alias=3-align4-empty.bin
nullTerminated=false
align=4

# A null-terminated empty file. A single byte, plus padding for the next which
# is aligned again.
[file]
filename=empty.bin
alias=4-null-terminated-empty.bin
# nullTerminated=true is set globally
align=1

# A null-terminated aligned empty file. A single byte.
[file]
filename=empty.bin
alias=5-null-terminated-align8-empty.bin
# nullTerminated=true is set globally
align=8

# This one is exactly 64 bytes, but because it is null-terminated, the next one
# has to be padded by another 64 bytes
[file]
filename=64bytes-33.bin
alias=6-null-terminated-align64.bin
# nullTerminated=true is set globally
align=64

# This one is 64-byte aligned but smaller than that, which is fine -- the next
# files will start right after
[file]
filename=55bytes-66.bin
alias=7-align64.bin
nullTerminated=false
align=64

# A non-null-terminated non-aligned file at the end. There should be no padding
# after. If any alignment extends beyond the data end, there would be -- that's
# tested in resources-alignment-larger-than-data-size.conf.
[file]
filename=17bytes-33.bin
alias=8.bin
nullTerminated=false
align=1
